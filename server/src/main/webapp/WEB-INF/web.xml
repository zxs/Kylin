<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns="http://java.sun.com/xml/ns/javaee"
           xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
           xsi:schemaLocation="http://java.sun.com/xml/ns/javaee
		  http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd"
           version="2.5">

    <display-name>Kylin RESt Service</display-name>

    <welcome-file-list>
        <welcome-file>/index.html</welcome-file>
    </welcome-file-list>

    <error-page>
        <error-code>404</error-code>
        <location>/index.html</location>
    </error-page>

    <context-param>
        <param-name>log4jConfigLocation</param-name>
        <param-value>classpath:log4j.properties</param-value>
    </context-param>
    <context-param>
        <param-name>contextConfigLocation</param-name>
        <param-value>
        	classpath:applicationContext.xml
			classpath:kylinSecurity.xml
			classpath*:kylin-*-plugin.xml
		</param-value>
    </context-param>

    <listener>
        <listener-class>org.springframework.web.util.Log4jConfigListener</listener-class>
    </listener>

    <listener>
        <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
    </listener>
    
    <listener>
    	<listener-class>com.ryantenney.metrics.spring.servlets.MetricsServletsContextListener</listener-class>
    </listener>
    <listener>
    	<listener-class>org.apache.kylin.rest.metrics.KylinInstrumentedFilterContextListener</listener-class>
    </listener>

	<listener>
		<listener-class>
			org.springframework.security.web.session.HttpSessionEventPublisher
		</listener-class>
	</listener>
	
<filter>
   <filter-name>CORS</filter-name>
   <filter-class>com.thetransactioncompany.cors.CORSFilter</filter-class>       
   <init-param>
      <param-name>cors.supportedHeaders</param-name>
      <param-value>Authorization,Origin, No-Cache, X-Requested-With, If-Modified-Since, Pragma, Last-Modified, Cache-Control, Expires, Content-Type, X-E4M-With, Accept</param-value>
   </init-param>   
  <init-param>
      <param-name>cors.supportedMethods</param-name>
      <param-value>GET, POST, PUT, DELETE, OPTIONS</param-value>
   </init-param>     
  <init-param>
      <param-name>cors.supportsCredentials </param-name>
      <param-value>true</param-value>
   </init-param>    
</filter>

<filter-mapping>
   <filter-name>CORS</filter-name>
   <url-pattern>/*</url-pattern>
</filter-mapping>
	
	<!--
		Apply Spring Security Filter to all Requests 
	 -->
	<filter>
        <filter-name>springSecurityFilterChain</filter-name>
        <filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
    </filter>
    <filter-mapping>
        <filter-name>springSecurityFilterChain</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>

	<filter>
	    <filter-name>instrumentedFilter</filter-name>
	    <filter-class>com.codahale.metrics.servlet.InstrumentedFilter</filter-class>
	</filter>
	<filter-mapping>
	    <filter-name>instrumentedFilter</filter-name>
	    <url-pattern>/*</url-pattern>
	</filter-mapping>
	
    <servlet>
        <servlet-name>kylin</servlet-name>
        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
        <load-on-startup>1</load-on-startup>
    </servlet>
    <servlet-mapping>
        <servlet-name>kylin</servlet-name>
        <url-pattern>/api/*</url-pattern>
    </servlet-mapping>
    <servlet>
        <servlet-name>metricsservlet</servlet-name>
        <servlet-class>com.codahale.metrics.servlets.MetricsServlet</servlet-class>
        <load-on-startup>1</load-on-startup>
    </servlet>
    <servlet-mapping>
        <servlet-name>metricsservlet</servlet-name>
        <url-pattern>/metrics/*</url-pattern>
    </servlet-mapping>
    
    <servlet>
        <servlet-name>metricsadminservlet</servlet-name>
        <servlet-class>com.codahale.metrics.servlets.AdminServlet</servlet-class>
        <load-on-startup>1</load-on-startup>
    </servlet>
    <servlet-mapping>
        <servlet-name>metricsadminservlet</servlet-name>
        <url-pattern>/metricsadmin/*</url-pattern>
    </servlet-mapping>
    
	<!-- 
	<servlet>
        <servlet-name>matricsadmin</servlet-name>
        <servlet-class>com.codahale.metrics.servlets.MetricsServlet</servlet-class>
        <load-on-startup>1</load-on-startup>
    </servlet>
    <servlet-mapping>
        <servlet-name>matricsadmin</servlet-name>
        <url-pattern>/matrics/*</url-pattern>
    </servlet-mapping>
     -->
</web-app>
